scalar BigInt

"""
Boolean expression comparing fields on type "BigInt"
"""
input BigIntFilter {
  eq: BigInt
  gt: BigInt
  gte: BigInt
  lt: BigInt
  lte: BigInt
  neq: BigInt
}

"""
Boolean expression comparing fields on type "Boolean"
"""
input BooleanFilter {
  eq: Boolean
  gt: Boolean
  gte: Boolean
  lt: Boolean
  lte: Boolean
  neq: Boolean
}

scalar Cursor

scalar Date

"""
Boolean expression comparing fields on type "Date"
"""
input DateFilter {
  eq: Date
  gt: Date
  gte: Date
  lt: Date
  lte: Date
  neq: Date
}

scalar Datetime

"""
Boolean expression comparing fields on type "Datetime"
"""
input DatetimeFilter {
  eq: Datetime
  gt: Datetime
  gte: Datetime
  lt: Datetime
  lte: Datetime
  neq: Datetime
}

"""
Boolean expression comparing fields on type "Float"
"""
input FloatFilter {
  eq: Float
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  neq: Float
}

"""
Boolean expression comparing fields on type "Int"
"""
input IntFilter {
  eq: Int
  gt: Int
  gte: Int
  lt: Int
  lte: Int
  neq: Int
}

scalar JSON

"""
Boolean expression comparing fields on type "JSON"
"""
input JSONFilter {
  eq: JSON
  neq: JSON
}

"""The root type for creating and mutating data"""
type Mutation {
  """Deletes zero or more records from the collection"""
  deleteFromcommentCollection(
    """Restricts the mutation's impact to records matching the critera"""
    filter: commentFilter

    """
    The maximum number of records in the collection permitted to be affected
    """
    atMost: Int! = 1
  ): commentDeleteResponse!

  """Deletes zero or more records from the collection"""
  deleteFrommyexampleCollection(
    """Restricts the mutation's impact to records matching the critera"""
    filter: myexampleFilter

    """
    The maximum number of records in the collection permitted to be affected
    """
    atMost: Int! = 1
  ): myexampleDeleteResponse!

  """Deletes zero or more records from the collection"""
  deleteFrompostCollection(
    """Restricts the mutation's impact to records matching the critera"""
    filter: postFilter

    """
    The maximum number of records in the collection permitted to be affected
    """
    atMost: Int! = 1
  ): postDeleteResponse!

  """Deletes zero or more records from the collection"""
  deleteFromprofileCollection(
    """Restricts the mutation's impact to records matching the critera"""
    filter: profileFilter

    """
    The maximum number of records in the collection permitted to be affected
    """
    atMost: Int! = 1
  ): profileDeleteResponse!

  """Deletes zero or more records from the collection"""
  deleteFromvoteCollection(
    """Restricts the mutation's impact to records matching the critera"""
    filter: voteFilter

    """
    The maximum number of records in the collection permitted to be affected
    """
    atMost: Int! = 1
  ): voteDeleteResponse!

  """Adds one or more `commentInsertResponse` records to the collection"""
  insertIntocommentCollection(objects: [commentInsertInput!]!): commentInsertResponse

  """Adds one or more `myexampleInsertResponse` records to the collection"""
  insertIntomyexampleCollection(objects: [myexampleInsertInput!]!): myexampleInsertResponse

  """Adds one or more `postInsertResponse` records to the collection"""
  insertIntopostCollection(objects: [postInsertInput!]!): postInsertResponse

  """Adds one or more `profileInsertResponse` records to the collection"""
  insertIntoprofileCollection(objects: [profileInsertInput!]!): profileInsertResponse

  """Adds one or more `voteInsertResponse` records to the collection"""
  insertIntovoteCollection(objects: [voteInsertInput!]!): voteInsertResponse

  """Updates zero or more records in the collection"""
  updatecommentCollection(
    """
    Fields that are set will be updated for all records matching the `filter`
    """
    set: commentUpdateInput!

    """Restricts the mutation's impact to records matching the critera"""
    filter: commentFilter

    """
    The maximum number of records in the collection permitted to be affected
    """
    atMost: Int! = 1
  ): commentUpdateResponse!

  """Updates zero or more records in the collection"""
  updatemyexampleCollection(
    """
    Fields that are set will be updated for all records matching the `filter`
    """
    set: myexampleUpdateInput!

    """Restricts the mutation's impact to records matching the critera"""
    filter: myexampleFilter

    """
    The maximum number of records in the collection permitted to be affected
    """
    atMost: Int! = 1
  ): myexampleUpdateResponse!

  """Updates zero or more records in the collection"""
  updatepostCollection(
    """
    Fields that are set will be updated for all records matching the `filter`
    """
    set: postUpdateInput!

    """Restricts the mutation's impact to records matching the critera"""
    filter: postFilter

    """
    The maximum number of records in the collection permitted to be affected
    """
    atMost: Int! = 1
  ): postUpdateResponse!

  """Updates zero or more records in the collection"""
  updateprofileCollection(
    """
    Fields that are set will be updated for all records matching the `filter`
    """
    set: profileUpdateInput!

    """Restricts the mutation's impact to records matching the critera"""
    filter: profileFilter

    """
    The maximum number of records in the collection permitted to be affected
    """
    atMost: Int! = 1
  ): profileUpdateResponse!

  """Updates zero or more records in the collection"""
  updatevoteCollection(
    """
    Fields that are set will be updated for all records matching the `filter`
    """
    set: voteUpdateInput!

    """Restricts the mutation's impact to records matching the critera"""
    filter: voteFilter

    """
    The maximum number of records in the collection permitted to be affected
    """
    atMost: Int! = 1
  ): voteUpdateResponse!
}

"""Defines a per-field sorting order"""
enum OrderByDirection {
  AscNullsFirst
  AscNullsLast
  DescNullsFirst
  DescNullsLast
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

"""The root type for querying data"""
type Query {
  """A pagable collection of type `comment`"""
  commentCollection(
    """Query the first `n` records in the collection"""
    first: Int

    """Query the last `n` records in the collection"""
    last: Int

    """Query values in the collection before the provided cursor"""
    before: Cursor

    """Query values in the collection after the provided cursor"""
    after: Cursor

    """Filters to apply to the results set when querying from the collection"""
    filter: commentFilter

    """Sort order to apply to the collection"""
    orderBy: [commentOrderBy!]
  ): commentConnection

  """A pagable collection of type `myexample`"""
  myexampleCollection(
    """Query the first `n` records in the collection"""
    first: Int

    """Query the last `n` records in the collection"""
    last: Int

    """Query values in the collection before the provided cursor"""
    before: Cursor

    """Query values in the collection after the provided cursor"""
    after: Cursor

    """Filters to apply to the results set when querying from the collection"""
    filter: myexampleFilter

    """Sort order to apply to the collection"""
    orderBy: [myexampleOrderBy!]
  ): myexampleConnection

  """A pagable collection of type `post`"""
  postCollection(
    """Query the first `n` records in the collection"""
    first: Int

    """Query the last `n` records in the collection"""
    last: Int

    """Query values in the collection before the provided cursor"""
    before: Cursor

    """Query values in the collection after the provided cursor"""
    after: Cursor

    """Filters to apply to the results set when querying from the collection"""
    filter: postFilter

    """Sort order to apply to the collection"""
    orderBy: [postOrderBy!]
  ): postConnection

  """A pagable collection of type `profile`"""
  profileCollection(
    """Query the first `n` records in the collection"""
    first: Int

    """Query the last `n` records in the collection"""
    last: Int

    """Query values in the collection before the provided cursor"""
    before: Cursor

    """Query values in the collection after the provided cursor"""
    after: Cursor

    """Filters to apply to the results set when querying from the collection"""
    filter: profileFilter

    """Sort order to apply to the collection"""
    orderBy: [profileOrderBy!]
  ): profileConnection

  """A pagable collection of type `vote`"""
  voteCollection(
    """Query the first `n` records in the collection"""
    first: Int

    """Query the last `n` records in the collection"""
    last: Int

    """Query values in the collection before the provided cursor"""
    before: Cursor

    """Query values in the collection after the provided cursor"""
    after: Cursor

    """Filters to apply to the results set when querying from the collection"""
    filter: voteFilter

    """Sort order to apply to the collection"""
    orderBy: [voteOrderBy!]
  ): voteConnection
}

"""
Boolean expression comparing fields on type "String"
"""
input StringFilter {
  eq: String
  gt: String
  gte: String
  lt: String
  lte: String
  neq: String
}

scalar Time

"""
Boolean expression comparing fields on type "Time"
"""
input TimeFilter {
  eq: Time
  gt: Time
  gte: Time
  lt: Time
  lte: Time
  neq: Time
}

scalar UUID

"""
Boolean expression comparing fields on type "UUID"
"""
input UUIDFilter {
  eq: UUID
  neq: UUID
}

type comment {
  id: BigInt!
  created_at: Datetime
  post_id: Int
  updated_at: Datetime
  content: String
  commenter_id: UUID
  post: post
  profile: profile
}

type commentConnection {
  edges: [commentEdge!]!
  pageInfo: PageInfo!

  """The total number of records matching the `filter` criteria"""
  totalCount: Int!
}

type commentDeleteResponse {
  """Count of the records impacted by the mutation"""
  affectedCount: Int!

  """Array of records impacted by the mutation"""
  records: [comment!]!
}

type commentEdge {
  cursor: String!
  node: comment
}

input commentFilter {
  id: BigIntFilter
  created_at: DatetimeFilter
  post_id: IntFilter
  updated_at: DatetimeFilter
  content: StringFilter
  commenter_id: UUIDFilter
}

input commentInsertInput {
  created_at: Datetime
  post_id: Int
  updated_at: Datetime
  content: String
  commenter_id: UUID
}

type commentInsertResponse {
  """Count of the records impacted by the mutation"""
  affectedCount: Int!

  """Array of records impacted by the mutation"""
  records: [comment!]!
}

input commentOrderBy {
  id: OrderByDirection
  created_at: OrderByDirection
  post_id: OrderByDirection
  updated_at: OrderByDirection
  content: OrderByDirection
  commenter_id: OrderByDirection
}

input commentUpdateInput {
  created_at: Datetime
  post_id: Int
  updated_at: Datetime
  content: String
  commenter_id: UUID
}

type commentUpdateResponse {
  """Count of the records impacted by the mutation"""
  affectedCount: Int!

  """Array of records impacted by the mutation"""
  records: [comment!]!
}

type myexample {
  id: BigInt!
  created_at: Datetime
}

type myexampleConnection {
  edges: [myexampleEdge!]!
  pageInfo: PageInfo!
}

type myexampleDeleteResponse {
  """Count of the records impacted by the mutation"""
  affectedCount: Int!

  """Array of records impacted by the mutation"""
  records: [myexample!]!
}

type myexampleEdge {
  cursor: String!
  node: myexample
}

input myexampleFilter {
  id: BigIntFilter
  created_at: DatetimeFilter
}

input myexampleInsertInput {
  created_at: Datetime
}

type myexampleInsertResponse {
  """Count of the records impacted by the mutation"""
  affectedCount: Int!

  """Array of records impacted by the mutation"""
  records: [myexample!]!
}

input myexampleOrderBy {
  id: OrderByDirection
  created_at: OrderByDirection
}

input myexampleUpdateInput {
  created_at: Datetime
}

type myexampleUpdateResponse {
  """Count of the records impacted by the mutation"""
  affectedCount: Int!

  """Array of records impacted by the mutation"""
  records: [myexample!]!
}

type post {
  id: Int!
  created_at: Datetime
  title: String
  url: String
  poster_id: UUID
  updated_at: Datetime
  vote_count: Int
  view_count: Int
  comment_count: Int
  ranking_core: Float
  commentCollection(
    """Query the first `n` records in the collection"""
    first: Int

    """Query the last `n` records in the collection"""
    last: Int

    """Query values in the collection before the provided cursor"""
    before: Cursor

    """Query values in the collection after the provided cursor"""
    after: Cursor

    """Filters to apply to the results set when querying from the collection"""
    filter: commentFilter

    """Sort order to apply to the collection"""
    orderBy: [commentOrderBy!]
  ): commentConnection
  profile: profile
  voteCollection(
    """Query the first `n` records in the collection"""
    first: Int

    """Query the last `n` records in the collection"""
    last: Int

    """Query values in the collection before the provided cursor"""
    before: Cursor

    """Query values in the collection after the provided cursor"""
    after: Cursor

    """Filters to apply to the results set when querying from the collection"""
    filter: voteFilter

    """Sort order to apply to the collection"""
    orderBy: [voteOrderBy!]
  ): voteConnection
}

type postConnection {
  edges: [postEdge!]!
  pageInfo: PageInfo!

  """The total number of records matching the `filter` criteria"""
  totalCount: Int!
}

type postDeleteResponse {
  """Count of the records impacted by the mutation"""
  affectedCount: Int!

  """Array of records impacted by the mutation"""
  records: [post!]!
}

type postEdge {
  cursor: String!
  node: post
}

input postFilter {
  id: IntFilter
  created_at: DatetimeFilter
  title: StringFilter
  url: StringFilter
  poster_id: UUIDFilter
  updated_at: DatetimeFilter
  vote_count: IntFilter
  view_count: IntFilter
  comment_count: IntFilter
  ranking_core: FloatFilter
}

input postInsertInput {
  created_at: Datetime
  title: String
  url: String
  poster_id: UUID
  updated_at: Datetime
  vote_count: Int
  view_count: Int
  comment_count: Int
  ranking_core: Float
}

type postInsertResponse {
  """Count of the records impacted by the mutation"""
  affectedCount: Int!

  """Array of records impacted by the mutation"""
  records: [post!]!
}

input postOrderBy {
  id: OrderByDirection
  created_at: OrderByDirection
  title: OrderByDirection
  url: OrderByDirection
  poster_id: OrderByDirection
  updated_at: OrderByDirection
  vote_count: OrderByDirection
  view_count: OrderByDirection
  comment_count: OrderByDirection
  ranking_core: OrderByDirection
}

input postUpdateInput {
  created_at: Datetime
  title: String
  url: String
  poster_id: UUID
  updated_at: Datetime
  vote_count: Int
  view_count: Int
  comment_count: Int
  ranking_core: Float
}

type postUpdateResponse {
  """Count of the records impacted by the mutation"""
  affectedCount: Int!

  """Array of records impacted by the mutation"""
  records: [post!]!
}

type profile {
  id: UUID!
  updated_at: Datetime
  username: String
  avatar_url: String
  website: String
  created_at: Datetime
  commentCollection(
    """Query the first `n` records in the collection"""
    first: Int

    """Query the last `n` records in the collection"""
    last: Int

    """Query values in the collection before the provided cursor"""
    before: Cursor

    """Query values in the collection after the provided cursor"""
    after: Cursor

    """Filters to apply to the results set when querying from the collection"""
    filter: commentFilter

    """Sort order to apply to the collection"""
    orderBy: [commentOrderBy!]
  ): commentConnection
  postCollection(
    """Query the first `n` records in the collection"""
    first: Int

    """Query the last `n` records in the collection"""
    last: Int

    """Query values in the collection before the provided cursor"""
    before: Cursor

    """Query values in the collection after the provided cursor"""
    after: Cursor

    """Filters to apply to the results set when querying from the collection"""
    filter: postFilter

    """Sort order to apply to the collection"""
    orderBy: [postOrderBy!]
  ): postConnection
  voteCollection(
    """Query the first `n` records in the collection"""
    first: Int

    """Query the last `n` records in the collection"""
    last: Int

    """Query values in the collection before the provided cursor"""
    before: Cursor

    """Query values in the collection after the provided cursor"""
    after: Cursor

    """Filters to apply to the results set when querying from the collection"""
    filter: voteFilter

    """Sort order to apply to the collection"""
    orderBy: [voteOrderBy!]
  ): voteConnection
}

type profileConnection {
  edges: [profileEdge!]!
  pageInfo: PageInfo!

  """The total number of records matching the `filter` criteria"""
  totalCount: Int!
}

type profileDeleteResponse {
  """Count of the records impacted by the mutation"""
  affectedCount: Int!

  """Array of records impacted by the mutation"""
  records: [profile!]!
}

type profileEdge {
  cursor: String!
  node: profile
}

input profileFilter {
  id: UUIDFilter
  updated_at: DatetimeFilter
  username: StringFilter
  avatar_url: StringFilter
  website: StringFilter
  created_at: DatetimeFilter
}

input profileInsertInput {
  id: UUID
  updated_at: Datetime
  username: String
  avatar_url: String
  website: String
  created_at: Datetime
}

type profileInsertResponse {
  """Count of the records impacted by the mutation"""
  affectedCount: Int!

  """Array of records impacted by the mutation"""
  records: [profile!]!
}

input profileOrderBy {
  id: OrderByDirection
  updated_at: OrderByDirection
  username: OrderByDirection
  avatar_url: OrderByDirection
  website: OrderByDirection
  created_at: OrderByDirection
}

input profileUpdateInput {
  id: UUID
  updated_at: Datetime
  username: String
  avatar_url: String
  website: String
  created_at: Datetime
}

type profileUpdateResponse {
  """Count of the records impacted by the mutation"""
  affectedCount: Int!

  """Array of records impacted by the mutation"""
  records: [profile!]!
}

type vote {
  id: Int!
  post_id: Int
  voter_id: UUID
  direction: BigInt
  created_at: Datetime
  updated_at: Datetime
  test_ggg: Int
  post: post
  profile: profile
}

type voteConnection {
  edges: [voteEdge!]!
  pageInfo: PageInfo!

  """The total number of records matching the `filter` criteria"""
  totalCount: Int!
}

type voteDeleteResponse {
  """Count of the records impacted by the mutation"""
  affectedCount: Int!

  """Array of records impacted by the mutation"""
  records: [vote!]!
}

type voteEdge {
  cursor: String!
  node: vote
}

input voteFilter {
  id: IntFilter
  post_id: IntFilter
  voter_id: UUIDFilter
  direction: BigIntFilter
  created_at: DatetimeFilter
  updated_at: DatetimeFilter
  test_ggg: IntFilter
}

input voteInsertInput {
  post_id: Int
  voter_id: UUID
  direction: BigInt
  created_at: Datetime
  updated_at: Datetime
  test_ggg: Int
}

type voteInsertResponse {
  """Count of the records impacted by the mutation"""
  affectedCount: Int!

  """Array of records impacted by the mutation"""
  records: [vote!]!
}

input voteOrderBy {
  id: OrderByDirection
  post_id: OrderByDirection
  voter_id: OrderByDirection
  direction: OrderByDirection
  created_at: OrderByDirection
  updated_at: OrderByDirection
  test_ggg: OrderByDirection
}

input voteUpdateInput {
  post_id: Int
  voter_id: UUID
  direction: BigInt
  created_at: Datetime
  updated_at: Datetime
  test_ggg: Int
}

type voteUpdateResponse {
  """Count of the records impacted by the mutation"""
  affectedCount: Int!

  """Array of records impacted by the mutation"""
  records: [vote!]!
}