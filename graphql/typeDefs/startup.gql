type Startup {
  id: ID!
  createdAt: Date!
  updatedAt: Date!
  
  name: String!
  url: String
  logo: String
  description: String
  foundedAt: Date!
  teamSize: Int!
  stage: String
  funding: Float!
  valuation: Float!
  revenue: Float!
  markets: [Market!]!
}

type StartupEdges {
  cursor: Cursor!
  node: Startup!
}

type StartupConnection {
  edges: [StartupEdges!]!
  pageInfo: PageInfo!
}

input StartupFilter {
  name: String
}

type Query {
  startup(id: ID!): Startup
  startups(
    first: Int,
    after: Cursor,
    last: Int,
    before: Cursor,
    filter: StartupFilter
  ): StartupConnection
}

input CreateStartupMutationInput {
  name: String!
  url: String
  logo: String
  description: String
  foundedAt: Date!
  teamSize: Int!
  stage: String
  funding: Float!
  valuation: Float!
  revenue: Float!
  dau: Int!
  markets: [Market!]!
}

input RemoveStartupMutationInput {
  id: ID!
}

type Mutation {
  createStartup(input: CreateStartupMutationInput!): Startup!
  removeStartup(input: RemoveStartupMutationInput!): Startup!
}